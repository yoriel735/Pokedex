/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Views;

import Entidades.Entrenador;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author yoriel
 */
public class AñadirEntrenador extends javax.swing.JDialog {

    /**
     * Creates new form AñadirEntrenador
     */
     private JTextField txtNombre;
    private JButton botonGuardar, botonCancelar;
  
    
     public AñadirEntrenador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        setupUI();
        setTitle("Añadir Entrenador");
        pack();
        this.setResizable(false);
        setLocationRelativeTo(parent);
        
    }

  
  private void setupUI() {
        JLabel lblNombre = new JLabel("Nombre del Entrenador:");
        txtNombre = new JTextField(20);

        botonGuardar = new JButton("Guardar");
        botonCancelar = new JButton("Cancelar");

        botonGuardar.addActionListener(e -> guardarCambios());
        botonCancelar.addActionListener(e -> cancelar());

        JPanel añadir = new JPanel();
        añadir.add(lblNombre);
        añadir.add(txtNombre);
        añadir.add(botonGuardar);
        añadir.add(botonCancelar);

        this.setContentPane(añadir);
           this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
    }

  private void guardarCambios() {
        String nuevoNombre = txtNombre.getText().trim();
        if (nuevoNombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio.");
            return;
            
       }       
         try {
        //Crear objeto Entrenador y asignarle el nombre
        Entrenador nuevoEntrenador = new Entrenador();
        nuevoEntrenador.setNomEntrenador(nuevoNombre);

        //Guardar en BD usando el controlador JPA
        Controladores.EntrenadorController.crearEntrenador(nuevoEntrenador);

        JOptionPane.showMessageDialog(this, "Entrenador guardado correctamente.");
        this.dispose(); //Cierra el dialogo

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al guardar el entrenador: " + ex.getMessage());
    }

        this.dispose();
    
        }
  
   private void cancelar() {
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
